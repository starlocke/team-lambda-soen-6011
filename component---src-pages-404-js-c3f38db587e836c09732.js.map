{"version":3,"sources":["webpack:///./src/components/homePageLink.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["Container","styled","div","BREAKPOINT","Content","main","RawHomePageLink","to","HomePageLink","SEO","description","lang","meta","keywords","title","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","NotFoundPage"],"mappings":"8kBAAA,+FAKMA,EAAYC,IAAOC,IAAV,8EAAGD,CAAH,qKAMQE,KAKjBC,EAAUH,IAAOI,KAAV,4EAAGJ,CAAH,wEAIUE,KAKjBG,EAAkB,kBACpB,kBAAC,IAAD,CAAMC,GAAG,KAAT,4BAGSC,EAAe,kBACxB,kBAACR,EAAD,KACI,kBAACI,EAAD,KACI,kBAACE,EAAD,U,4FCpBZ,SAASG,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MACxCC,EADiD,OACjDA,KAcFC,EAAkBN,GAAeK,EAAKE,aAAaP,YAEzD,OACE,kBAAC,IAAD,CACEQ,eAAgB,CACdP,QAEFG,MAAOA,EACPK,cAAa,QAAUJ,EAAKE,aAAaH,MACzCF,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASP,GAEX,CACEQ,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASP,GAEX,CACEM,KAAK,sBACLC,QAASL,IAGVQ,OACCX,EAASY,OAAS,EACd,CACEL,KAAK,WACLC,QAASR,EAASa,KAAT,OAEX,IAELF,OAAOZ,KAKhBH,EAAIkB,aAAe,CACjBhB,KAAK,KACLC,KAAM,GACNC,SAAU,GACVH,YAAY,GACZI,MAAM,YAWOL,O,kCCnGf,oEAeemB,UATM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,MAAM,mBACX,8CACA,8EACA,kBAAC,IAAD","file":"component---src-pages-404-js-c3f38db587e836c09732.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { BREAKPOINT } from '../utils/constants'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  margin: 0 auto;\n  text-decoration: underline;\n  max-width: 1400px;\n  padding: 0 var(--sides-padding-desktop);\n\n  @media (max-width: ${BREAKPOINT}px) {\n    padding: 0 var(--sides-padding-mobile);\n  }\n`;\n\nconst Content = styled.main`\n  margin: 0 auto;\n  max-width: 900px;\n\n  @media (max-width: ${BREAKPOINT}px) {\n    width: 100%;\n  }\n`;\n\nconst RawHomePageLink = () => (\n    <Link to='/'>&#8592; Back to the Home Page</Link>\n)\n\nexport const HomePageLink = () => (\n    <Container>\n        <Content>\n            <RawHomePageLink />\n        </Content>\n    </Container>\n)","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n  title: `SESTOPIA`\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo\"\nimport { HomePageLink } from '../components/homePageLink'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>PAGE NOT FOUND</h1>\n    <p>The page you tried to access could not be found</p>\n    <HomePageLink />\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}