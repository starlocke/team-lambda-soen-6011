{"version":3,"sources":["webpack:///./src/components/footer.js","webpack:///./src/templates/categories.js"],"names":["Container","styled","footer","BREAKPOINT","Footer","Categories","pageContext","data","category","allMarkdownRemark","edges","totalCount","categoryHeader","map","node","frontmatter","title","slug","key","to","style","display","margin","pageQuery"],"mappings":"8FAAA,mFAIMA,EAAYC,IAAOC,OAAV,wEAAGD,CAAH,6IAQQE,KAKVC,EAAS,WACpB,OACE,kBAACJ,EAAD,yDAMWI,O,kCCzBf,8GA0DeC,UAnDI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACzBC,EAAaF,EAAbE,SADoC,EAEdD,EAAKE,kBAA3BC,EAFoC,EAEpCA,MAAOC,EAF6B,EAE7BA,WACTC,EAAoBD,EAAN,SACH,IAAfA,EAAmB,GAAK,KADN,iBAEHH,EAFG,IAGpB,OACE,kBAAC,IAAD,KACE,4BAAKI,GACL,4BACGF,EAAMG,KAAI,YAAe,IAAD,IAAXC,KACiBC,YAArBC,EADe,EACfA,MAAOC,EADQ,EACRA,KACf,OACE,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CAAME,GAAIF,GAAOD,QASzB,kBAAC,IAAD,CAAMG,GAAG,eAAT,uBACA,kBAAC,IAAD,CAAMC,MAAO,CAACC,QAAS,QAASC,OAAQ,SAAUH,GAAG,KAArD,4BACA,kBAAC,IAAD,QA2BC,IAAMI,EAAS","file":"component---src-templates-categories-js-207a8677cb744fa8d158.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { BREAKPOINT } from '../utils/constants';\n\nconst Container = styled.footer`\n  font-size: 17px;\n  margin-top: 20vh;\n  position: relative;\n  bottom: 10vh;\n  padding-top: 5vh;\n  text-align: center;\n\n  @media (max-width: ${BREAKPOINT}px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Footer = () => {\n  return (\n    <Container>\n        SESTOPIA - An Information Intensive Application\n    </Container>\n  );\n};\n\nexport default Footer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout/layout\"\nimport Footer from \"../components/footer\"\n\nconst Categories = ({ pageContext, data }) => {\n  const { category } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const categoryHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${category}\"`\n  return (\n    <Layout>\n      <h1>{categoryHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { title, slug } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n      <Link to=\"/categories\">View all categories</Link>\n      <Link style={{display: 'block', margin: '1em 0'}} to='/'>\t&#8592; Back to the Home Page</Link>\n      <Footer></Footer>\n    </Layout>\n  )\n}\nCategories.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\nexport default Categories\nexport const pageQuery = graphql`\n  query($category: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}