{"componentChunkName":"component---src-templates-skill-page-template-js","path":"/skills/software-construction/tdd-testing","result":{"data":{"markdownRemark":{"html":"<h2>Classification of Skill</h2>\n<ul>\n<li>\n<p>Hard skill</p>\n<blockquote>\n<p>Definition 1 – “Because, it is technical knowledge or training that you have gained through any life experience, including in your career or education.”</p>\n<p>Definition 2 - “Hard skills are learned abilities acquired and enhanced through practice, repetition, and education. Hard skills are important because they increase employee productivity and efficiency and subsequently improve employee satisfaction.”</p>\n</blockquote>\n</li>\n<li>\n<p>Technical skill</p>\n<blockquote>\n<p>Definition 1 – “Because, it is the ability to carry out a task associated with technical roles such as IT, engineering, mechanics, science or finance.”</p>\n<p>Definition 2 – “Technical skills are sets of abilities or knowledge used to perform practical tasks in the areas of mechanics, science, mathematics and information technology.”</p>\n</blockquote>\n</li>\n</ul>\n<h2>Prerequisites for Skill</h2>\n<ul>\n<li>Requirements are main part that should be known in advance to ignite the work.</li>\n<li>Proper knowledge required for testing as well as for coding.</li>\n<li>Code should be work last long for readable and maintainable purposes.</li>\n</ul>\n<h2>Related Software Engineering Area(s)</h2>\n<ul>\n<li>\n<p>We can divide skill in 4 parts and think as scientific process.</p>\n<ul>\n<li>Question</li>\n<li>Prediction</li>\n<li>Experiment</li>\n<li>Subject</li>\n</ul>\n</li>\n<li>“With TDD, instead of learning things about the world, we’re creating a new world that should confirm to our specifications.” </li>\n<li>So, questions are like actual requirements.</li>\n<li>\n<p>Thus, <strong>Software Requirements</strong> are related to TDD.</p>\n<ul>\n<li>As maintained in prerequisites, requirements are necessary before development.</li>\n<li>We can narrow down Software Requirements area to <strong>Requirements Elicitation</strong>. </li>\n</ul>\n</li>\n<li>Then, prediction is about predicting output of failed test case.</li>\n<li>Experiment is like actual test.</li>\n<li>\n<p>So, it is related with <strong>Software Testing</strong>.</p>\n<ul>\n<li>The skill can be related with various techniques of testing because initially requirements are build as wrong implementation to see exact fault.</li>\n<li>This process will continue until the expected output do not match.</li>\n<li>This area go down to <strong>Test Techniques</strong> and <strong>Software Testing Tools</strong>.</li>\n</ul>\n</li>\n<li>Once you know the fault via experiment in terms of test assertion, you can move forward with the requirement/feature for the development.</li>\n<li>\n<p>At last, subject is alike code implementation that can be related to <strong>Software Construction</strong>.</p>\n<ul>\n<li>Cut down to <strong>Practical Considerations</strong>, <strong>Construction Technologies</strong>, <strong>Software Construction Tools</strong>.</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Scientific Method</th>\n<th>TDD</th>\n<th>Software Engineering Area</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Question</td>\n<td>Requirement</td>\n<td>Software Requirements</td>\n</tr>\n<tr>\n<td>Prediction</td>\n<td>Expected Output</td>\n<td>----------------------------</td>\n</tr>\n<tr>\n<td>Experiment</td>\n<td>Test Assertion</td>\n<td>Software Testing</td>\n</tr>\n<tr>\n<td>Subject</td>\n<td>Implementation Code</td>\n<td>Software Construction</td>\n</tr>\n</tbody>\n</table>\n<h2>Rationale for Skill</h2>\n<ul>\n<li>Good skill to create highly usable software.</li>\n<li>Refactoring to previous code due to change in requirements or increase code quality is safe.</li>\n<li>Provide quick visualization for the code base to eliminate functional deficiencies.</li>\n<li>Code quality metric generation is easy and swift.</li>\n<li>It will prevent to forget write test cases.</li>\n</ul>\n<h2>Roles for Skill</h2>\n<ul>\n<li>\n<p>Tester</p>\n<ul>\n<li>They will think first how their failing test cases will look like.</li>\n<li>After getting failed, he/she will exact requirements and features.</li>\n<li>They will think exactly what will be the edge of features.</li>\n<li>At last, he/she will do correct test cases and refactor part to complete their role.</li>\n</ul>\n</li>\n</ul>\n<h2>Work Related to Skill (Related Activities and Artifacts)</h2>\n<ul>\n<li>Write failing test code which failed due to the mismatch of the code with the expected test behavior. (RED box in Image 1)</li>\n<li>Then, just focus on writing code to pass the test. (GREEN box in Image 1)</li>\n<li>Now, test the code again and make sure with functionality. (REFACTOR box in Image 1)</li>\n<li>At the end, commit your code in repository and integrate with other code. (INTEGRATE box in Image 1)\n! <a href=\"https://www.google.com/search?q=tdd+images&#x26;rlz=1C1CHBF_enCA864CA864&#x26;sxsrf=ALeKk00DtzvqdX_J5qRnXy9-D3L6yp5YSA:1595450188413&#x26;source=lnms&#x26;tbm=isch&#x26;sa=X&#x26;ved=2ahUKEwiAsvKN2-HqAhVthHIEHV_mCqoQ_AUoAXoECA0QAw&#x26;biw=1396&#x26;bih=686#imgrc=uLvSVrYmp416RM\" title=\"Life-cycle of TDD\">Image 1</a></li>\n</ul>\n<h2>Real-World Example/Scenario of Skill (Text, Graphic, Audio, Video)</h2>\n<ul>\n<li>\n<p>Example 1 –</p>\n<ul>\n<li>Video related scenario and unit testing for customer log in.</li>\n<li><a href=\"https://www.youtube.com/watch?time_continue=142&#x26;v=lj5nnGa_DIw&#x26;feature=emb_logo\">https://www.youtube.com/watch?time_continue=142&#x26;v=lj5nnGa_DIw&#x26;feature=emb_logo</a></li>\n</ul>\n</li>\n<li>\n<p>Example 2 –</p>\n<ul>\n<li>C# code test case (Image 2)\n! <a href=\"https://www.google.com/search?q=unit+test+code+example+toptal+isPalimdrome&#x26;tbm=isch&#x26;ved=2ahUKEwjfhr2I3eHqAhUR06wKHVTzBTcQ2-cCegQIABAA&#x26;oq=unit+test+code+example+toptal+isPalimdrome&#x26;gs_lcp=CgNpbWcQA1D4uQNY8tADYI3UA2gAcAB4AIABe4gB5wmSAQM5LjSYAQCgAQGqAQtnd3Mtd2l6LWltZ8ABAQ&#x26;sclient=img&#x26;ei=WaUYX5_2N5GmswXU5pe4Aw&#x26;bih=686&#x26;biw=1396&#x26;rlz=1C1CHBF_enCA864CA864#imgrc=2sGnlccUQJz73M\" title=\"Unit testing\">Image 2</a></li>\n</ul>\n</li>\n</ul>\n<h2>Role of Academia or Industry in Cultivating the Skill</h2>\n<ul>\n<li>\n<p>Academia</p>\n<ul>\n<li>It helps in programming course for grading every size of projects automatically.</li>\n<li>So that, learning process is more abstract and efficient.</li>\n<li>Moreover, it helps students as any time feedback for their current progress.</li>\n<li>With continuous process, it builds analytical and comprehension skills which are much needed for student growth.</li>\n</ul>\n</li>\n<li>\n<p>Industry</p>\n<ul>\n<li>Most important, creates a lot of test cases which results in lower defect rates that also save from a big fluctuation in cost estimation.</li>\n<li>When test cases fail, you will know exact defect or error.</li>\n<li>It increases confidence between team members.</li>\n</ul>\n</li>\n</ul>\n<h2>Tools Supporting the Skill</h2>\n<ul>\n<li>\n<p>Mockito</p>\n<ul>\n<li>Java based framework for testing as an open source.</li>\n<li>It allows automated unit test cases to create test double objects for test-driven development.</li>\n<li>Moreover allows developers to verify the behavior of the system under test (SUT) without establishing expectations beforehand.</li>\n<li>The test code is tightly coupled with the system under test.</li>\n</ul>\n</li>\n<li>\n<p>Junit</p>\n<ul>\n<li>Popular Java unit testing framework.</li>\n<li>Very important for test-driven development and also known as xUnit which came from SUnit.</li>\n<li>A research survey performed in 2013 across 10,000 Java projects hosted on GitHub found that JUnit (in a tie with slf4j-api), was the most commonly included external library.</li>\n</ul>\n</li>\n<li>\n<p>NuGet</p>\n<ul>\n<li>Mainly designed for the Microsoft development platform as an open source and free of cost.</li>\n<li>One type of Visual Studio extension.</li>\n<li>Furthermore, it is merged with SharpDevelop.</li>\n<li>NuGet can also be used from the command line and automated with scripts.</li>\n</ul>\n</li>\n</ul>\n<h2>Skill Self-Assessment (My Skill Score (1 – 10) and Reasons for Self-Assigned Score)</h2>\n<ul>\n<li>6</li>\n<li>I read some articles based on TDD to gain some level of basic as well as intermediate knowledge.</li>\n<li>Primarily, I used this skill in my academia mainly in projects.</li>\n<li>Especially in the subject APP (Advanced Programming Practices), project RISK game development, I tried TDD testing skill.</li>\n<li>From that, I earned basic coding experience in JAVA language in general and Junit in particular.</li>\n<li>With that testing support, I modified code to develop actual requirement of fortification (one requirement).</li>\n<li>However, I didn’t face any real-world experience yet.</li>\n</ul>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://www.guru99.com/test-driven-development.html\">https://www.guru99.com/test-driven-development.html</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Test-driven_development#:~:text=TDD%20is%20primarily%20a%20developer&#x27;s,TDD%20requires%20test%20automation\">https://en.wikipedia.org/wiki/Test-driven_development#:~:text=TDD%20is%20primarily%20a%20developer's,TDD%20requires%20test%20automation</a>.</li>\n<li><a href=\"https://www.agilemania.com/blog/role-tester-test-driven-development-tdd/\">https://www.agilemania.com/blog/role-tester-test-driven-development-tdd/</a></li>\n<li><a href=\"https://www.xenonstack.com/insights/what-is-test-driven-development/#:~:text=Mockito%20allows%20programmers%20to%20create,other%20tools%20and%20frameworks%20available\">https://www.xenonstack.com/insights/what-is-test-driven-development/#:~:text=Mockito%20allows%20programmers%20to%20create,other%20tools%20and%20frameworks%20available</a>.</li>\n<li><a href=\"https://www.guru99.com/unit-testing-guide.html\">https://www.guru99.com/unit-testing-guide.html</a></li>\n<li><a href=\"https://nugetmusthaves.com/Tag/tdd\">https://nugetmusthaves.com/Tag/tdd</a></li>\n<li><a href=\"https://junit.org/junit4/\">https://junit.org/junit4/</a></li>\n<li><a href=\"https://medium.com/@joantolos/6-tools-to-help-you-do-tdd-with-nodejs-70d19a9ca041\">https://medium.com/@joantolos/6-tools-to-help-you-do-tdd-with-nodejs-70d19a9ca041</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Mockito\">https://en.wikipedia.org/wiki/Mockito</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/JUnit\">https://en.wikipedia.org/wiki/JUnit</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/NuGet\">https://en.wikipedia.org/wiki/NuGet</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Mocha_(JavaScript_framework\">https://en.wikipedia.org/wiki/Mocha_(JavaScript_framework</a>)</li>\n<li>file:///C:/Users/hardi/Downloads/Applying<em>Test-driven</em>Development<em>to</em>Eval.pdf</li>\n<li><a href=\"https://digitalcommons.calpoly.edu/cgi/viewcontent.cgi?referer=https://www.google.com/&#x26;httpsredir=1&#x26;article=1036&#x26;context=csse_fac\">https://digitalcommons.calpoly.edu/cgi/viewcontent.cgi?referer=https://www.google.com/&#x26;httpsredir=1&#x26;article=1036&#x26;context=csse_fac</a></li>\n<li><a href=\"https://www.industriallogic.com/blog/tdd-purposes-and-practices/\">https://www.industriallogic.com/blog/tdd-purposes-and-practices/</a></li>\n<li><a href=\"https://www.indeed.com/career-advice/resumes-cover-letters/hard-skills-vs-soft-skills#:~:text=Hard%20skills%20are%20related%20to,and%20advance%20in%20most%20jobs\">https://www.indeed.com/career-advice/resumes-cover-letters/hard-skills-vs-soft-skills#:~:text=Hard%20skills%20are%20related%20to,and%20advance%20in%20most%20jobs</a>.</li>\n<li><a href=\"https://www.wikijob.co.uk/content/interview-advice/competencies/technical-skills\">https://www.wikijob.co.uk/content/interview-advice/competencies/technical-skills</a></li>\n<li><a href=\"https://www.investopedia.com/terms/h/hard-skills.asp#:~:text=Hard%20skills%20are%20learned%20abilities,and%20subsequently%20improve%20employee%20satisfaction\">https://www.investopedia.com/terms/h/hard-skills.asp#:~:text=Hard%20skills%20are%20learned%20abilities,and%20subsequently%20improve%20employee%20satisfaction</a>.</li>\n<li><a href=\"https://www.investopedia.com/terms/t/technical-skills.asp#:~:text=Technical%20skills%20are%20sets%20of,science%2C%20mathematics%20and%20information%20technology\">https://www.investopedia.com/terms/t/technical-skills.asp#:~:text=Technical%20skills%20are%20sets%20of,science%2C%20mathematics%20and%20information%20technology</a>.</li>\n<li><a href=\"https://www.departmentofproduct.com/blog/writing-bdd-test-scenarios/#:~:text=Test%20driven%20development%20is%20primarily,specific%20parts%20of%20your%20application.&#x26;text=All%20tests%20are%20written%20before%20the%20code\">https://www.departmentofproduct.com/blog/writing-bdd-test-scenarios/#:~:text=Test%20driven%20development%20is%20primarily,specific%20parts%20of%20your%20application.&#x26;text=All%20tests%20are%20written%20before%20the%20code</a></li>\n<li><a href=\"https://www.toptal.com/qa/how-to-write-testable-code-and-why-it-matters\">https://www.toptal.com/qa/how-to-write-testable-code-and-why-it-matters</a></li>\n<li><a href=\"https://devops.com/the-benefits-of-test-driven-development/#:~:text=TDD%20Benefits&#x26;text=Because%20put%20in%20its%20simplest,user%20interfaces%20to%20achieve%20that\">https://devops.com/the-benefits-of-test-driven-development/#:~:text=TDD%20Benefits&#x26;text=Because%20put%20in%20its%20simplest,user%20interfaces%20to%20achieve%20that</a>.</li>\n<li><a href=\"https://dev.to/hudsonburgess7/7-reasons-you-should-be-using-test-driven-development\">https://dev.to/hudsonburgess7/7-reasons-you-should-be-using-test-driven-development</a></li>\n<li><a href=\"https://medium.com/javascript-scene/testing-software-what-is-tdd-459b2145405c\">https://medium.com/javascript-scene/testing-software-what-is-tdd-459b2145405c</a></li>\n</ul>","frontmatter":{"title":"Test Driven Development Testing","slug":"/skills/software-construction/tdd-testing","author":"Hardik Vora"}}},"pageContext":{"slug":"/skills/software-construction/tdd-testing"}},"staticQueryHashes":["3649515864","63159454"]}