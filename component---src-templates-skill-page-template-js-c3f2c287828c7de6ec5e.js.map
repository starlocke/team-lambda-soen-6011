{"version":3,"sources":["webpack:///./src/components/homePageLink.js","webpack:///./src/components/footer.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack:///./src/components/globalStyles.js","webpack:///./src/components/contentLayout.js","webpack:///./src/templates/skillPageTemplate.js","webpack:///./src/components/seo.js"],"names":["Container","styled","div","BREAKPOINT","Content","main","RawHomePageLink","to","HomePageLink","footer","Footer","strings","raw","slice","GlobalStyles","createGlobalStyle","Wrapper","Layout","children","pageQuery","SkillPageTemplate","markdownRemark","data","frontmatter","html","title","author","dangerouslySetInnerHTML","__html","SEO","description","lang","meta","keywords","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps"],"mappings":"+kBAAA,+FAKMA,EAAYC,IAAOC,IAAV,8EAAGD,CAAH,qKAMQE,KAKjBC,EAAUH,IAAOI,KAAV,4EAAGJ,CAAH,wEAIUE,KAKjBG,EAAkB,kBACpB,kBAAC,IAAD,CAAMC,GAAG,KAAT,4BAGSC,EAAe,kBACxB,kBAACR,EAAD,KACI,kBAACI,EAAD,KACI,kBAACE,EAAD,U,oCChCZ,mFAIMN,EAAYC,IAAOQ,OAAV,wEAAGR,CAAH,6IAQQE,KAKVO,EAAS,WACpB,OACE,kBAACV,EAAD,yDAMWU,O,yJCzBqCC,EAASC,E,GAATD,E,s9DAC7CC,IACHA,EAAMD,EAAQE,MAAM,IAGtBF,EAAQC,IAAMA,EACPD,G,gCCFF,IAAMG,EAAeC,YAAH,IAsCFZ,KCnCjBa,EAAUf,IAAOC,IAAV,6EAAGD,CAAH,2IAKUE,KAKjBC,EAAUH,IAAOI,KAAV,6EAAGJ,CAAH,wEAIUE,KAKVc,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,oCACE,kBAACJ,EAAD,MACA,kBAACE,EAAD,KACE,kBAACZ,EAAD,KAAUc,M,gDCOLC,EAAS,aAaPC,UA1CW,SAAC,GAEpB,IACGC,EADJ,EADJC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOF,EAAYE,SAGrB,kBAAC,EAAD,KACA,4BAAKF,EAAYE,OACjB,4CAAkBF,EAAYG,QAC5B,yBACEC,wBAAyB,CAAEC,OAAQJ,MAGvC,kBAAC,IAAD,MACA,kBAAC,IAAD,S,4FCjBR,SAASK,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUR,EAAS,EAATA,MACxCS,EADiD,OACjDA,KAcFC,EAAkBL,GAAeI,EAAKE,aAAaN,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFN,MAAOA,EACPa,cAAa,QAAUJ,EAAKE,aAAaX,MACzCO,KAAM,CACJ,CACEO,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASf,GAEX,CACEgB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaV,QAE7B,CACEa,KAAK,gBACLC,QAASf,GAEX,CACEc,KAAK,sBACLC,QAASL,IAGVO,OACCT,EAASU,OAAS,EACd,CACEJ,KAAK,WACLC,QAASP,EAASW,KAAT,OAEX,IAELF,OAAOV,KAKhBH,EAAIgB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNC,SAAU,GACVH,YAAY,GACZL,MAAM,YAWOI","file":"component---src-templates-skill-page-template-js-c3f2c287828c7de6ec5e.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { BREAKPOINT } from '../utils/constants'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  margin: 0 auto;\n  text-decoration: underline;\n  max-width: 1400px;\n  padding: 0 var(--sides-padding-desktop);\n\n  @media (max-width: ${BREAKPOINT}px) {\n    padding: 0 var(--sides-padding-mobile);\n  }\n`;\n\nconst Content = styled.main`\n  margin: 0 auto;\n  max-width: 900px;\n\n  @media (max-width: ${BREAKPOINT}px) {\n    width: 100%;\n  }\n`;\n\nconst RawHomePageLink = () => (\n    <Link to='/'>&#8592; Back to the Home Page</Link>\n)\n\nexport const HomePageLink = () => (\n    <Container>\n        <Content>\n            <RawHomePageLink />\n        </Content>\n    </Container>\n)","import React from 'react';\nimport styled from 'styled-components';\nimport { BREAKPOINT } from '../utils/constants';\n\nconst Container = styled.footer`\n  font-size: 17px;\n  margin-top: 20vh;\n  position: relative;\n  bottom: 10vh;\n  padding-top: 5vh;\n  text-align: center;\n\n  @media (max-width: ${BREAKPOINT}px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Footer = () => {\n  return (\n    <Container>\n        SESTOPIA - An Information Intensive Application\n    </Container>\n  );\n};\n\nexport default Footer\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import { createGlobalStyle } from 'styled-components';\n\nimport { BREAKPOINT } from '../utils/constants';\n\nexport const GlobalStyles = createGlobalStyle`\n  :root {\n    --sides-padding-desktop: 3%;\n    --sides-padding-mobile: 5%;\n  }\n\n  @font-face {\n    font-display: block;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-display: block;\n    font-style: normal;\n    font-weight: 700;\n  }\n  \n  html {\n    font-family: sans-serif;\n  }\n\n  a {\n    background-color: transparent;\n    -webkit-text-decoration-skip: objects;\n  }\n  a:active,\n  a:hover {\n    outline-width: 0;\n  }\n\n  body {\n    background-color: var(--light-color);\n    color: var(--dark-color);\n    font-size: 19px;\n    font-weight: 400;\n    height: 100%;\n    padding-top: 20vh;\n\n  @media (max-width: ${BREAKPOINT}px) {\n      font-size: 17px;\n      padding-top: 15vh;\n    }\n  }\n\n  /* CSS Reset */\n\n  /* Box sizing rules */\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  /* Set core body defaults */\n  body {\n    line-height: 1.5;\n    min-height: 100vh;\n    scroll-behavior: smooth;\n    text-rendering: optimizeSpeed;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  /* Remove list styles on ul, ol elements with a class attribute */\n  ul[class],\n  ol[class] {\n    list-style: none;\n  }\n\n  /* A elements that don't have a class get default styles */\n  a:not([class]) {\n    text-decoration-skip-ink: auto;\n  }\n\n  /* Make images easier to work with */\n  img {\n    display: block;\n    max-width: 100%;\n  }\n\n  /* Natural flow and rhythm in articles by default */\n  article > * + * {\n    margin-top: 1em;\n  }\n\n  /* Inherit fonts for inputs and buttons */\n  button,\n  input,\n  select,\n  textarea {\n    font: inherit;\n  }\n\n  /* Remove all animations and transitions for people that prefer not to see them */\n  @media (prefers-reduced-motion: reduce) {\n    * {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      scroll-behavior: auto !important;\n      transition-duration: 0.01ms !important;\n    }\n  }\n`;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { GlobalStyles } from './globalStyles'\nimport { BREAKPOINT } from '../utils/constants'\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: 1400px;\n  padding: 0 var(--sides-padding-desktop);\n\n  @media (max-width: ${BREAKPOINT}px) {\n    padding: 0 var(--sides-padding-mobile);\n  }\n`;\n\nconst Content = styled.main`\n  margin: 0 auto;\n  max-width: 900px;\n\n  @media (max-width: ${BREAKPOINT}px) {\n    width: 100%;\n  }\n`;\n\nexport const Layout = ({ children }) => {\n  return (\n    <>\n      <GlobalStyles />\n      <Wrapper>\n        <Content>{children}</Content>\n      </Wrapper>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;","import React from 'react'\nimport { graphql } from \"gatsby\"\nimport PropTypes from 'prop-types'\nimport { Layout } from '../components/contentLayout'\nimport { Footer } from '../components/footer'\nimport SEO from '../components/seo'\nimport { HomePageLink } from '../components/homePageLink'\nimport { Layout as IndexLayout }  from '../components/layout/layout'\n\nconst SkillPageTemplate = ({\n  data,\n}) => {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <>\n      <IndexLayout>\n        <SEO\n          title={frontmatter.title}\n        />\n      </IndexLayout>\n        <Layout>\n        <h1>{frontmatter.title}</h1>\n        <h2>Authored by: {frontmatter.author}</h2>\n          <div\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </Layout> \n        <HomePageLink />\n        <Footer />\n    </>\n  )\n}\n\nSkillPageTemplate.propTypes = {\n  data: PropTypes.object.isRequired\n}\n\nexport const pageQuery = graphql`\nquery($slug: String!) {\n  markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n    html\n    frontmatter {\n      title\n      slug\n      author\n    }\n  }\n}\n`;\n\nexport default SkillPageTemplate;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n  title: `SESTOPIA`\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}